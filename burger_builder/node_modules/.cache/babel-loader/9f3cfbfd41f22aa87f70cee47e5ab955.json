{"ast":null,"code":"var _jsxFileName = \"D:\\\\torrent\\\\TUTORIALS\\\\js_projects\\\\burger_builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/auxilary\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGEDIENT_PRICES = {\n  salad: 50,\n  cheese: 40,\n  meat: 130,\n  bacon: 60\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 40,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredinetHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredinents = { ...this.state.ingredients\n      };\n      updatedIngredinents[type] = updatedCount;\n      const priceAddition = INGEDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredinents\n      });\n      this.updatePurchasableState(updatedIngredinents);\n    };\n\n    this.removeIngredinetHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredinents = { ...this.state.ingredients\n      };\n      updatedIngredinents[type] = updatedCount;\n      const priceDeduction = INGEDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredinents\n      });\n      this.updatePurchasableState(updatedIngredinents);\n    };\n  }\n\n  purchaseHandler() {}\n\n  updatePurchasableState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabeledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabeledInfo) {\n      disabeledInfo[key] = disabeledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredinetHandler,\n        ingredientRemoved: this.removeIngredinetHandler,\n        disabled: disabeledInfo,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/torrent/TUTORIALS/js_projects/burger_builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGEDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredinetHandler","type","oldCount","updatedCount","updatedIngredinents","priceAddition","oldPrice","newPrice","setState","updatePurchasableState","removeIngredinetHandler","priceDeduction","purchaseHandler","sum","Object","keys","map","igKey","reduce","el","render","disabeledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/auxilary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGEDIENT_PRICES = {\r\n    salad: 50,\r\n    cheese: 40,\r\n    meat: 130,\r\n    bacon: 60\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 40,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    purchaseHandler() {\r\n\r\n    }\r\n\r\n    updatePurchasableState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        this.setState({ purchasable: sum > 0 })\r\n    };\r\n\r\n    addIngredinetHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredinents[type] = updatedCount;\r\n        const priceAddition = INGEDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredinents });\r\n        this.updatePurchasableState(updatedIngredinents);\r\n    }\r\n\r\n    removeIngredinetHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredinents[type] = updatedCount;\r\n        const priceDeduction = INGEDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredinents });\r\n        this.updatePurchasableState(updatedIngredinents);\r\n    }\r\n\r\n    render() {\r\n        const disabeledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabeledInfo) {\r\n            disabeledInfo[key] = disabeledInfo[key] <= 0;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal>\r\n                    <OrderSummary ingredients={this.state.ingredients} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls\r\n                    ingredientAdded={this.addIngredinetHandler}\r\n                    ingredientRemoved={this.removeIngredinetHandler}\r\n                    disabled={disabeledInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    price={this.state.totalPrice} />\r\n            </Aux >\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}